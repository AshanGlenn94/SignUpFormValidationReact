{"version":3,"sources":["FormValidation.js","App.js","index.js"],"names":["FormValidation","initialValues","fname","lname","email","password","onSubmit","values","console","log","validate","errors","nameRegEx","length","test","props","touched","isSubmitting","handleChange","handleBlur","handleSubmit","htmlFor","name","type","placeholder","value","onChange","onBlur","className","disabled","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPA4HeA,EAzHQ,kBACrB,cAAC,IAAD,CACEC,cAAe,CAAEC,MAAO,GAAIC,MAAO,GAAIC,MAAO,GAAIC,SAAU,IAC5DC,SAAU,SAACC,GACTC,QAAQC,IAAI,aAAcF,IAG5BG,SAAU,SAACH,GACT,IAAII,EAAS,GAEPC,EAAY,iBAEbL,EAAOL,MAEDK,EAAOL,MAAMW,OAAS,EAC/BF,EAAOT,MAAQ,iDACLU,EAAUE,KAAKP,EAAOL,SAChCS,EAAOT,MAAQ,sBAJfS,EAAOT,MAAQ,sBAMZK,EAAOJ,MAEDI,EAAOJ,MAAMU,OAAS,EAC/BF,EAAOR,MAAQ,gDACLS,EAAUE,KAAKP,EAAOJ,SAChCQ,EAAOR,MAAQ,qBAJfQ,EAAOR,MAAQ,qBASZI,EAAOH,MAFO,iDAIIU,KAAKP,EAAOH,SACjCO,EAAOP,MAAQ,iBAFfO,EAAOP,MAAQ,iBAejB,OARKG,EAAOF,SAEDE,EAAOF,SAASQ,OAAS,EAClCF,EAAON,SAAW,+CALE,cAMIS,KAAKP,EAAOF,YACpCM,EAAON,SAAW,6CAJlBM,EAAON,SAAW,oBAObM,GA5CX,SA+CG,SAACI,GAAW,IAETR,EAOEQ,EAPFR,OACAS,EAMED,EANFC,QACAL,EAKEI,EALFJ,OACAM,EAIEF,EAJFE,aACAC,EAGEH,EAHFG,aACAC,EAEEJ,EAFFI,WACAC,EACEL,EADFK,aAEF,OACE,uBAAMd,SAAUc,EAAhB,UACE,uBAAOC,QAAQ,QAAf,wBACA,uBACEC,KAAK,QACLC,KAAK,OACLC,YAAY,wBACZC,MAAOlB,EAAOL,MACdwB,SAAUR,EACVS,OAAQR,EACRS,UAAWjB,EAAOT,OAASc,EAAQd,OAAS,UAE7CS,EAAOT,OAASc,EAAQd,OACvB,qBAAK0B,UAAU,iBAAf,SAAiCjB,EAAOT,QAE1C,uBAAOmB,QAAQ,QAAf,uBACA,uBACEC,KAAK,QACLC,KAAK,OACLC,YAAY,uBACZC,MAAOlB,EAAOJ,MACduB,SAAUR,EACVS,OAAQR,EACRS,UAAWjB,EAAOR,OAASa,EAAQb,OAAS,UAE7CQ,EAAOR,OAASa,EAAQb,OACvB,qBAAKyB,UAAU,iBAAf,SAAiCjB,EAAOR,QAE1C,uBAAOkB,QAAQ,QAAf,mBACA,uBACEC,KAAK,QACLC,KAAK,OACLC,YAAY,mBACZC,MAAOlB,EAAOH,MACdsB,SAAUR,EACVS,OAAQR,EACRS,UAAWjB,EAAOP,OAASY,EAAQZ,OAAS,UAE7CO,EAAOP,OAASY,EAAQZ,OACvB,qBAAKwB,UAAU,iBAAf,SAAiCjB,EAAOP,QAE1C,uBAAOiB,QAAQ,WAAf,sBACA,uBACEC,KAAK,WACLC,KAAK,WACLC,YAAY,sBACZC,MAAOlB,EAAOF,SACdqB,SAAUR,EACVS,OAAQR,EACRS,UAAWjB,EAAON,UAAYW,EAAQX,UAAY,UAEnDM,EAAON,UAAYW,EAAQX,UAC1B,qBAAKuB,UAAU,iBAAf,SAAiCjB,EAAON,WAE1C,wBAAQkB,KAAK,SAASM,SAAUZ,EAAhC,mCCpGKa,MAXf,WACE,OACE,qBAAKF,UAAU,OAAf,SACE,gCACE,wCACA,cAAC,EAAD,UCJRG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f0c18cb9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Formik } from \"formik\";\r\n\r\nconst FormValidation = () => (\r\n  <Formik\r\n    initialValues={{ fname: \"\", lname: \"\", email: \"\", password: \"\" }}\r\n    onSubmit={(values) => {\r\n      console.log(\"Valid Form\", values);\r\n    }}\r\n    // //Validation using JavaScript Regular Expressions\r\n    validate={(values) => {\r\n      let errors = {};\r\n\r\n      const nameRegEx = /^[a-z ,.'-]+$/i;\r\n\r\n      if (!values.fname) {\r\n        errors.fname = \"First Name Required\";\r\n      } else if (values.fname.length < 5) {\r\n        errors.fname = \"First Name must be at least 5 characters long.\";\r\n      } else if (!nameRegEx.test(values.fname)) {\r\n        errors.fname = \"Invalid First Name\";\r\n      }\r\n      if (!values.lname) {\r\n        errors.lname = \"Last Name Required\";\r\n      } else if (values.lname.length < 5) {\r\n        errors.lname = \"Last Name must be at least 5 characters long.\";\r\n      } else if (!nameRegEx.test(values.lname)) {\r\n        errors.lname = \"Invalid Last Name\";\r\n      }\r\n\r\n      const emailRegEx = /^\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/;\r\n\r\n      if (!values.email) {\r\n        errors.email = \"Email Required\";\r\n      } else if (!emailRegEx.test(values.email)) {\r\n        errors.email = \"Invalid Email\";\r\n      }\r\n\r\n      const passwordRegEx = /(?=.*[0-9])/;\r\n\r\n      if (!values.password) {\r\n        errors.password = \"Password Required\";\r\n      } else if (values.password.length < 8) {\r\n        errors.password = \"Password must be at least 8 characters long.\";\r\n      } else if (!passwordRegEx.test(values.password)) {\r\n        errors.password = \"Invalid password, Must contain one number\";\r\n      }\r\n\r\n      return errors;\r\n    }}\r\n  >\r\n    {(props) => {\r\n      const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        isSubmitting,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n      } = props;\r\n      return (\r\n        <form onSubmit={handleSubmit}>\r\n          <label htmlFor=\"fname\">First Name</label>\r\n          <input\r\n            name=\"fname\"\r\n            type=\"text\"\r\n            placeholder=\"Enter your First Name\"\r\n            value={values.fname}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            className={errors.fname && touched.fname && \"error\"}\r\n          />\r\n          {errors.fname && touched.fname && (\r\n            <div className=\"input-feedback\">{errors.fname}</div>\r\n          )}\r\n          <label htmlFor=\"lname\">Last Name</label>\r\n          <input\r\n            name=\"lname\"\r\n            type=\"text\"\r\n            placeholder=\"Enter your Last Name\"\r\n            value={values.lname}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            className={errors.lname && touched.lname && \"error\"}\r\n          />\r\n          {errors.lname && touched.lname && (\r\n            <div className=\"input-feedback\">{errors.lname}</div>\r\n          )}\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input\r\n            name=\"email\"\r\n            type=\"text\"\r\n            placeholder=\"Enter your email\"\r\n            value={values.email}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            className={errors.email && touched.email && \"error\"}\r\n          />\r\n          {errors.email && touched.email && (\r\n            <div className=\"input-feedback\">{errors.email}</div>\r\n          )}\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Enter your password\"\r\n            value={values.password}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            className={errors.password && touched.password && \"error\"}\r\n          />\r\n          {errors.password && touched.password && (\r\n            <div className=\"input-feedback\">{errors.password}</div>\r\n          )}\r\n          <button type=\"submit\" disabled={isSubmitting}>\r\n            Create Account\r\n          </button>\r\n        </form>\r\n      );\r\n    }}\r\n  </Formik>\r\n);\r\n\r\nexport default FormValidation;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport FormValidation from \"./FormValidation\";\n\nfunction App() {\n  return (\n    <div className=\"card\">\n      <div>\n        <h1>SignUp</h1>\n        <FormValidation />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}